// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`'/basic': Package.build > default > check 1`] = `
{
  "output": {
    "attw": "
basic v0.0.0

 (ignoring resolutions: 'node10', 'node16-cjs')

(ignored per resolution) ⚠️ A require call resolved to an ESM JavaScript file, which is an error in Node and some bundlers. CommonJS consumers will need to use a dynamic import. https://github.com/arethetypeswrong/arethetypeswrong.github.io/blob/main/docs/problems/CJSResolvesToESM.md


[90m┌─────────[39m[90m┬───────────────────[39m[90m┬─────────[39m[90m┬──────────────────[39m[90m┬────────────────────────────────────────┐[39m
[90m│[39m[31m         [39m[90m│[39m[31m node16 (from ESM) [39m[90m│[39m[31m bundler [39m[90m│[39m[31m node10 (ignored) [39m[90m│[39m[31m node16 (from CJS) (ignored)            [39m[90m│[39m
[90m├─────────[39m[90m┼───────────────────[39m[90m┼─────────[39m[90m┼──────────────────[39m[90m┼────────────────────────────────────────┤[39m
[90m│[39m "basic" [90m│[39m 🟢 (ESM)          [90m│[39m 🟢      [90m│[39m (ignored) 🟢     [90m│[39m (ignored) ⚠️ ESM (dynamic import only) [90m│[39m
[90m└─────────[39m[90m┴───────────────────[39m[90m┴─────────[39m[90m┴──────────────────[39m[90m┴────────────────────────────────────────┘[39m
",
    "publint": "Running publint v0.3.14 for basic...
Packing files with \`bun pack\`...
Linting...
All good!
",
  },
}
`;

exports[`'/basic': Package.build > default > main 1`] = `
"import { bar as bar1, foo as foo1 } from './foo.js';
export function foo(options = {}) {
    foo1(options);
    console.log('Hello, foo!', options.value);
}
export function bar(options = {}) {
    bar1(options);
    console.log('Hello, bar!', options.value);
}
(function (bar) {
    function baz(options = {}) {
        console.log('Hello, baz!', options.value);
    }
    bar.baz = baz;
})(bar || (bar = {}));
//# sourceMappingURL=index.js.map"
`;

exports[`'/basic': Package.build > default > output 1`] = `
"{
  "name": "basic",
  "version": "0.0.0",
  "type": "module",
  "exports": {
    ".": {
      "src": "./index.ts",
      "types": "./dist/index.d.ts",
      "default": "./dist/index.js"
    }
  },
  "sideEffects": false,
  "main": "./dist/index.js",
  "module": "./dist/index.js",
  "types": "./dist/index.d.ts"
}


├── dist
│   ├── foo.d.ts
│   ├── foo.d.ts.map
│   ├── foo.js
│   ├── foo.js.map
│   ├── index.d.ts
│   ├── index.d.ts.map
│   ├── index.js
│   └── index.js.map
├── foo.ts
├── index.ts
├── package.json
└── tsconfig.json
"
`;

exports[`'/basic': Package.build > default > result 1`] = `
{
  "packageJson": {
    "exports": {
      ".": {
        "default": "./dist/index.js",
        "src": "./index.ts",
        "types": "./dist/index.d.ts",
      },
    },
    "main": "./dist/index.js",
    "module": "./dist/index.js",
    "name": "basic",
    "sideEffects": false,
    "type": "module",
    "types": "./dist/index.d.ts",
    "version": "0.0.0",
  },
  "tsConfig": {
    "compilerOptions": {
      "composite": false,
      "declaration": true,
      "declarationDir": undefined,
      "declarationMap": true,
      "emitDeclarationOnly": false,
      "esModuleInterop": true,
      "isolatedModules": true,
      "module": "nodenext",
      "moduleDetection": "force",
      "moduleResolution": "nodenext",
      "noEmit": false,
      "outDir": "/repos/basic/dist",
      "skipLibCheck": true,
      "sourceMap": true,
      "strict": true,
      "target": "es2021",
      "verbatimModuleSyntax": true,
    },
    "include": [
      "/repos/basic/index.ts",
    ],
  },
}
`;

exports[`'/basic': Package.build > default > types 1`] = `
"export declare function foo(options?: foo.Options): void;
export declare namespace foo {
    type Options = {
        value?: string | undefined;
    };
}
export declare function bar(options?: bar.Options): void;
export declare namespace bar {
    type Options = {
        value?: string | undefined;
    };
    function baz(options?: Options): void;
}
//# sourceMappingURL=index.d.ts.map"
`;

exports[`'/basic-object-exports': Package.build > default > check 1`] = `
{
  "output": {
    "attw": "
basic v0.0.0

 (ignoring resolutions: 'node10', 'node16-cjs')

(ignored per resolution) ⚠️ A require call resolved to an ESM JavaScript file, which is an error in Node and some bundlers. CommonJS consumers will need to use a dynamic import. https://github.com/arethetypeswrong/arethetypeswrong.github.io/blob/main/docs/problems/CJSResolvesToESM.md


[90m┌─────────[39m[90m┬───────────────────[39m[90m┬─────────[39m[90m┬──────────────────[39m[90m┬────────────────────────────────────────┐[39m
[90m│[39m[31m         [39m[90m│[39m[31m node16 (from ESM) [39m[90m│[39m[31m bundler [39m[90m│[39m[31m node10 (ignored) [39m[90m│[39m[31m node16 (from CJS) (ignored)            [39m[90m│[39m
[90m├─────────[39m[90m┼───────────────────[39m[90m┼─────────[39m[90m┼──────────────────[39m[90m┼────────────────────────────────────────┤[39m
[90m│[39m "basic" [90m│[39m 🟢 (ESM)          [90m│[39m 🟢      [90m│[39m (ignored) 🟢     [90m│[39m (ignored) ⚠️ ESM (dynamic import only) [90m│[39m
[90m└─────────[39m[90m┴───────────────────[39m[90m┴─────────[39m[90m┴──────────────────[39m[90m┴────────────────────────────────────────┘[39m
",
    "publint": "Running publint v0.3.14 for basic...
Packing files with \`bun pack\`...
Linting...
All good!
",
  },
}
`;

exports[`'/basic-object-exports': Package.build > default > main 1`] = `
"import { bar as bar1, foo as foo1 } from './foo.js';
export function foo(options = {}) {
    foo1(options);
    console.log('Hello, foo!', options.value);
}
export function bar(options = {}) {
    bar1(options);
    console.log('Hello, bar!', options.value);
}
(function (bar) {
    function baz(options = {}) {
        console.log('Hello, baz!', options.value);
    }
    bar.baz = baz;
})(bar || (bar = {}));
//# sourceMappingURL=index.js.map"
`;

exports[`'/basic-object-exports': Package.build > default > output 1`] = `
"{
  "name": "basic",
  "version": "0.0.0",
  "type": "module",
  "exports": {
    ".": {
      "src": "./index.ts",
      "types": "./dist/index.d.ts",
      "default": "./dist/index.js"
    }
  },
  "sideEffects": false,
  "main": "./dist/index.js",
  "module": "./dist/index.js",
  "types": "./dist/index.d.ts"
}


├── dist
│   ├── foo.d.ts
│   ├── foo.d.ts.map
│   ├── foo.js
│   ├── foo.js.map
│   ├── index.d.ts
│   ├── index.d.ts.map
│   ├── index.js
│   └── index.js.map
├── foo.ts
├── index.ts
├── package.json
└── tsconfig.json
"
`;

exports[`'/basic-object-exports': Package.build > default > result 1`] = `
{
  "packageJson": {
    "exports": {
      ".": {
        "default": "./dist/index.js",
        "src": "./index.ts",
        "types": "./dist/index.d.ts",
      },
    },
    "main": "./dist/index.js",
    "module": "./dist/index.js",
    "name": "basic",
    "sideEffects": false,
    "type": "module",
    "types": "./dist/index.d.ts",
    "version": "0.0.0",
  },
  "tsConfig": {
    "compilerOptions": {
      "composite": false,
      "declaration": true,
      "declarationDir": undefined,
      "declarationMap": true,
      "emitDeclarationOnly": false,
      "esModuleInterop": true,
      "isolatedModules": true,
      "module": "nodenext",
      "moduleDetection": "force",
      "moduleResolution": "nodenext",
      "noEmit": false,
      "outDir": "/repos/basic-object-exports/dist",
      "skipLibCheck": true,
      "sourceMap": true,
      "strict": true,
      "target": "es2021",
      "verbatimModuleSyntax": true,
    },
    "include": [
      "/repos/basic-object-exports/index.ts",
    ],
  },
}
`;

exports[`'/basic-object-exports': Package.build > default > types 1`] = `
"export declare function foo(options?: foo.Options): void;
export declare namespace foo {
    type Options = {
        value?: string | undefined;
    };
}
export declare function bar(options?: bar.Options): void;
export declare namespace bar {
    type Options = {
        value?: string | undefined;
    };
    function baz(options?: Options): void;
}
//# sourceMappingURL=index.d.ts.map"
`;

exports[`'/error-module-resolution': Package.build > default > error 1`] = `
"/repos/error-module-resolution/tsconfig.json has invalid configuration:
  - "module" must be "nodenext". Found: "preserve"
  - "moduleResolution" must be "nodenext". Found: "bundler""
`;

exports[`'/single-entrypoint': Package.build > default > check 1`] = `
{
  "output": {
    "attw": "
single-entrypoint v0.0.0

 (ignoring resolutions: 'node10', 'node16-cjs')

(ignored per resolution) ⚠️ A require call resolved to an ESM JavaScript file, which is an error in Node and some bundlers. CommonJS consumers will need to use a dynamic import. https://github.com/arethetypeswrong/arethetypeswrong.github.io/blob/main/docs/problems/CJSResolvesToESM.md


[90m┌─────────────────────[39m[90m┬───────────────────[39m[90m┬─────────[39m[90m┬──────────────────[39m[90m┬────────────────────────────────────────┐[39m
[90m│[39m[31m                     [39m[90m│[39m[31m node16 (from ESM) [39m[90m│[39m[31m bundler [39m[90m│[39m[31m node10 (ignored) [39m[90m│[39m[31m node16 (from CJS) (ignored)            [39m[90m│[39m
[90m├─────────────────────[39m[90m┼───────────────────[39m[90m┼─────────[39m[90m┼──────────────────[39m[90m┼────────────────────────────────────────┤[39m
[90m│[39m "single-entrypoint" [90m│[39m 🟢 (ESM)          [90m│[39m 🟢      [90m│[39m (ignored) 🟢     [90m│[39m (ignored) ⚠️ ESM (dynamic import only) [90m│[39m
[90m└─────────────────────[39m[90m┴───────────────────[39m[90m┴─────────[39m[90m┴──────────────────[39m[90m┴────────────────────────────────────────┘[39m
",
    "publint": "Running publint v0.3.14 for single-entrypoint...
Packing files with \`bun pack\`...
Linting...
All good!
",
  },
}
`;

exports[`'/single-entrypoint': Package.build > default > main 1`] = `
"import { bar as bar1, foo as foo1 } from './foo.js'

export function foo(options: foo.Options = {}) {
  foo1(options)
  console.log('Hello, foo!', options.value)
}

export declare namespace foo {
  type Options = {
    value?: string | undefined
  }
}

export function bar(options: bar.Options = {}) {
  bar1(options)
  console.log('Hello, bar!', options.value)
}

export namespace bar {
  export type Options = {
    value?: string | undefined
  }

  export function baz(options: Options = {}) {
    console.log('Hello, baz!', options.value)
  }
}
"
`;

exports[`'/single-entrypoint': Package.build > default > output 1`] = `
"{
  "name": "single-entrypoint",
  "version": "0.0.0",
  "type": "module",
  "main": "./index.ts",
  "sideEffects": false,
  "module": "./dist/index.js",
  "types": "./dist/index.d.ts",
  "exports": {
    ".": {
      "src": "./index.ts",
      "types": "./dist/index.d.ts",
      "default": "./dist/index.js"
    }
  }
}


├── dist
│   ├── foo.d.ts
│   ├── foo.d.ts.map
│   ├── foo.js
│   ├── foo.js.map
│   ├── index.d.ts
│   ├── index.d.ts.map
│   ├── index.js
│   └── index.js.map
├── foo.ts
├── index.ts
├── package.json
└── tsconfig.json
"
`;

exports[`'/single-entrypoint': Package.build > default > result 1`] = `
{
  "packageJson": {
    "exports": {
      ".": {
        "default": "./dist/index.js",
        "src": "./index.ts",
        "types": "./dist/index.d.ts",
      },
    },
    "main": "./index.ts",
    "module": "./dist/index.js",
    "name": "single-entrypoint",
    "sideEffects": false,
    "type": "module",
    "types": "./dist/index.d.ts",
    "version": "0.0.0",
  },
  "tsConfig": {
    "compilerOptions": {
      "composite": false,
      "declaration": true,
      "declarationDir": undefined,
      "declarationMap": true,
      "emitDeclarationOnly": false,
      "esModuleInterop": true,
      "isolatedModules": true,
      "module": "nodenext",
      "moduleDetection": "force",
      "moduleResolution": "nodenext",
      "noEmit": false,
      "outDir": "/repos/single-entrypoint/dist",
      "skipLibCheck": true,
      "sourceMap": true,
      "strict": true,
      "target": "es2021",
      "verbatimModuleSyntax": true,
    },
    "include": [
      "/repos/single-entrypoint/index.ts",
    ],
  },
}
`;

exports[`'/single-entrypoint': Package.build > default > types 1`] = `
"export declare function foo(options?: foo.Options): void;
export declare namespace foo {
    type Options = {
        value?: string | undefined;
    };
}
export declare function bar(options?: bar.Options): void;
export declare namespace bar {
    type Options = {
        value?: string | undefined;
    };
    function baz(options?: Options): void;
}
//# sourceMappingURL=index.d.ts.map"
`;
